{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGgBC,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAC1BD,SAASC,cAAc,mBAIvB,SAALC,EAAWC,EAAUC,GAE4B,OAAjD,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,EAAUQ,QAAAP,IAEpBG,EAAO,C,SAAEJ,EAAUQ,QAAAP,MAEpBA,MAbQJ,SAASC,cAAc,SAiB/BW,iBAAiB,UACxB,SAAkBC,GAChBA,EAAMC,iBACN,MAAMC,OAAEA,EAAMC,KAAEA,EAAMC,MAAAC,GAAUL,EAAMM,OAAOC,SAC7C,IAAIC,EAAcC,OAAOP,EAAOQ,OAC5BC,EAAYF,OAAON,EAAKO,OACxBE,EAAaH,OAAOJ,EAAMK,OAC9B,IAAK,IAAIG,EAAQ,EAAGA,EAAQL,EAAaK,GAAS,EAChDxB,EAAWwB,EAAOD,GACfE,MAAK,EAACxB,SAAEA,EAAQc,MAAEA,MACjBW,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB3B,QAAiBc,UAGzCc,OAAM,EAAC5B,SAAEA,EAAQc,MAAEA,MAClBW,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB7B,QAAec,UAGzCQ,GAAcD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// находим инпуты и кнопку отправка.\nconst delayEL = document.querySelector('[name=\"delay\"]');\nconst stepEL = document.querySelector('[name=\"step\"]');\nconst amountEL = document.querySelector('[name=\"amount\"]');\nconst btnEL = document.querySelector('[type=\"submit\"]');\nconst formEL = document.querySelector('.form');\n\n// создаёв функцию promis.\nfunction getPromise(position, delayEL) {\n  // создаём новый промис с условиями (resolve, reject).и с записываемой задержкой инпут).\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delayEL });\n      } else {\n        reject({ position, delayEL });\n      }\n    }, delayEL);\n  });\n}\n\nformEL.addEventListener('submit', onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { amount, step, delay } = event.target.elements;\n  let amountValue = Number(amount.value);\n  let stepValue = Number(step.value);\n  let delayValue = Number(delay.value);\n  for (let index = 0; index < amountValue; index += 1) {\n    getPromise(index, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$getPromise","position","delayEL1","Promise","resolve","reject","setTimeout","Math","random","delayEL","addEventListener","event","preventDefault","amount","step","delay","delay1","target","elements","amountValue","Number","value","stepValue","delayValue","index","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b4d96fe3.js.map"}